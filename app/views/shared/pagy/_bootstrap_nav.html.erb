<%#
  This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
  calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").
  The link variable is set to a proc that returns the link tag.
  Usage: link.call( page_number [, text [, extra_attributes_string ]])
-%>
<% pagination_class = '' if pagination_class.nil? %>
<% pagination_size = '' if pagination_class.nil? %>

<% link = pagy_link_proc(pagy, link_extra: 'class="page-link" ') -%>
<%#                            -%>
<nav aria-label="pager" class="pagy-bootstrap-nav" role="navigation">
  <ul class="pagination <%= pagination_class %> <%= pagination_size %>">
    <% if pagy.prev -%>
      <li class="page-item">
        <%== link.call(pagy.prev, '&lt;', 'aria-label="previous"') %>
      </li>
    <% else -%>
      <li class="page-item disabled">
        <a href="#" class="page-link">
          <span aria-hidden="true">	&lt;</span><span class="sr-only"><%== pagy_t('pagy.nav.prev') %></span>
        </a>
      </li>
    <% end -%>
    <% pagy.series.each do |item|
      # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36]    -%>
      <% if item.is_a?(Integer) -%>
        <li class="page-item"><%== link.call(item) %></li>
      <% elsif item.is_a?(String) -%>
        <li class="page-item active"><%== link.call(item) %></li>
      <% elsif item == :gap -%>
        <li class="page-item disabled gap"><a href="#" class="page-link"><%== pagy_t('pagy.nav.gap') %></a></li>
      <% end -%>
    <% end -%>
    <% if pagy.next -%>
      <li class="page-item next"><%== link.call(pagy.next, '&gt;', 'aria-label="next"') %></li>
    <% else -%>
      <li class="page-item disabled">
        <a href="#" class="page-link">
          <span aria-hidden="true">&gt;</span><span class="sr-only"><%== pagy_t('pagy.nav.next') %></span>
        </a>
      </li>
    <% end -%>
  </ul>
</nav>